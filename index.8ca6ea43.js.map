{"mappings":"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","sources":["src/js/todolist.js","node_modules/uuid/dist/esm-browser/native.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/v4.js","src/js/refs.js","src/js/storage.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { v4 as uuidv4 } from 'uuid';\nimport { refs } from \"./refs\";\nimport storage from \"./storage\";\n\n\nlet data = {};\nconst KEY = \"save-todo\";\n\nrefs.form.addEventListener(\"input\", onSaveTodo);\nrefs.form.addEventListener(\"submit\", onSubmit);\n\ninitData();\n\nfunction onSaveTodo(evt) {\n    const { name, value } = evt.target;\n    data[name] = value;\n    storage.save(KEY, { ...data, id:uuidv4() });\n};\nfunction initData() {\n    const savedTodo = storage.load(KEY);\n    if (savedTodo) {\n        for (const key in savedTodo) {\n            refs.form[key].value = savedTodo[key];\n            data[key] = savedTodo[key];\n        }\n    }\n}\n\nfunction onSubmit(e) { \n    e.preventDefault();\n    if (!data.text || !data.priority) {\n        Notify.failure('Заповніть всі поля форми');\n        return;\n    }\n    renderData(data);\n    data = {};\n    refs.form.reset();\n    storage.remove(KEY);\n};\n\nfunction renderData(data) {\n    const markup = `<li>todo:${data.text}, priority:${data.priority} <button type=\"button\" class=\"todo__delete\" id=${uuidv4()}></button></li>`;\n    refs.list.insertAdjacentHTML(\"afterbegin\", markup);\n    Notify.success('Нотатка додана');\n}\n\n\n\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","export const refs = {\n    form: document.querySelector(\".todo\"),\n    list: document.querySelector(\".todo__items\")\n};","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\nconst remove = key => {\n  try {\n     localStorage.removeItem(key);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nexport default {\n  save,\n  load,\n  remove,\n};"],"names":["$iQIUW","parcelRequire","$5afbd4fb4df23c28$export$2e2bcd8739ae039","crypto","randomUUID","bind","$ecc82b4b4d5334a5$var$getRandomValues","$ecc82b4b4d5334a5$var$rnds8","Uint8Array","$ecc82b4b4d5334a5$export$2e2bcd8739ae039","getRandomValues","Error","$5ce84198744ccadf$var$byteToHex","i","push","toString","slice","$5ce84198744ccadf$export$8fb373d660548968","arr","offset","toLowerCase","$87befc68df50040c$export$2e2bcd8739ae039","options","buf","rnds","random","rng","$ee27a4d7c64fc8c4$export$21666b427502ea6d","form","document","querySelector","list","$3fff5e8daf4b13a6$export$2e2bcd8739ae039","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","getItem","undefined","parse","removeItem","$f7591ff4e872158c$var$data","addEventListener","evt","name","target","save","id","e","preventDefault","text","priority","Notify","failure","data1","markup","insertAdjacentHTML","success","$f7591ff4e872158c$var$renderData","reset","remove","savedTodo","load","$f7591ff4e872158c$var$initData"],"version":3,"file":"index.8ca6ea43.js.map"}